{
  "name": "corectl",
  "info": {
    "title": "Specification for corectl",
    "description": "corectl contains various commands to interact with the Qlik Associative Engine. See respective command for more information",
    "version": "development build",
    "license": "MIT"
  },
  "clispec": "0.1.0",
  "x-qlik-stability": "experimental",
  "flags": {
    "app": {
      "alias": "a",
      "description": "App name, if no app is specified a session app is used instead"
    },
    "bash": {
      "description": "Bash flag used to adapt output to bash completion format",
      "default": "false"
    },
    "config": {
      "alias": "c",
      "description": "path/to/config.yml where parameters can be set instead of on the command line"
    },
    "engine": {
      "alias": "e",
      "description": "URL to the Qlik Associative Engine",
      "default": "localhost:9076"
    },
    "headers": {
      "description": "Http headers to use when connecting to Qlik Associative Engine",
      "default": "[]"
    },
    "no-data": {
      "description": "Open app without data",
      "default": "false"
    },
    "traffic": {
      "alias": "t",
      "description": "Log JSON websocket traffic to stdout",
      "default": "false"
    },
    "ttl": {
      "description": "Qlik Associative Engine session time to live in seconds",
      "default": "30"
    },
    "verbose": {
      "alias": "v",
      "description": "Log extra information",
      "default": "false"
    }
  },
  "commands": {
    "app": {
      "description": "Explore and manage apps",
      "commands": {
        "ls": {
          "description": "Print a list of all apps available in the current engine"
        },
        "rm": {
          "description": "Remove the specified app",
          "flags": {
            "suppress": {
              "description": "Suppress confirmation dialogue",
              "default": "false"
            }
          }
        }
      }
    },
    "assoc": {
      "alias": "associations",
      "description": "Print table associations"
    },
    "build": {
      "flags": {
        "connections": {
          "description": "Path to a yml file containing the data connection definitions"
        },
        "dimensions": {
          "description": "A list of generic dimension json paths"
        },
        "measures": {
          "description": "A list of generic measures json paths"
        },
        "no-reload": {
          "description": "Do not run the reload script",
          "default": "false"
        },
        "no-save": {
          "description": "Do not save the app",
          "default": "false"
        },
        "objects": {
          "description": "A list of generic object json paths"
        },
        "script": {
          "description": "Path to a qvs file containing the app data reload script"
        },
        "silent": {
          "description": "Do not log reload output",
          "default": "false"
        }
      }
    },
    "catwalk": {
      "description": "Open the specified app in catwalk. If no app is specified the catwalk hub will be opened.",
      "flags": {
        "catwalk-url": {
          "description": "Url to an instance of catwalk, if not provided the qlik one will be used",
          "default": "https://catwalk.core.qlik.com"
        }
      }
    },
    "completion": {
      "description": "Generate a shell completion script for the specified shell (bash or zsh). The shell script must be evaluated to provide\ninteractive completion. This can be done by sourcing it in your ~/.bashrc or ~/.zshrc file. \nNote that bash-completion is required and needs to be installed on your system."
    },
    "connection": {
      "description": "Explore and manage connections",
      "commands": {
        "get": {
          "description": "Show the properties for a specific connection"
        },
        "ls": {
          "description": "Print a list of all connections in the current app"
        },
        "rm": {
          "description": "Remove one or many connections from the app"
        },
        "set": {
          "description": "Set or update the connections in the current app"
        }
      }
    },
    "dimension": {
      "description": "Explore and manage dimensions",
      "commands": {
        "layout": {
          "description": "Evaluate the layout of an generic dimension"
        },
        "ls": {
          "description": "Print a list of all generic dimensions in the current app"
        },
        "properties": {
          "description": "Print the properties of the generic dimension"
        },
        "rm": {
          "description": "Remove one or many dimensions in the current app",
          "flags": {
            "no-save": {
              "description": "Do not save the app",
              "default": "false"
            }
          }
        },
        "set": {
          "description": "Set or update the dimensions in the current app",
          "flags": {
            "no-save": {
              "description": "Do not save the app",
              "default": "false"
            }
          }
        }
      }
    },
    "eval": {
      "description": "Evaluate a list of measures and dimensions. To evaluate a measure for a specific dimension use the \u003cmeasure\u003e by \u003cdimension\u003e notation. If dimensions are omitted then the eval will be evaluated over all dimensions."
    },
    "fields": {
      "description": "Print all the fields in an app, and for each field also some sample content, tags and and number of values"
    },
    "generate-docs": {
      "description": "Generate markdown docs based on cobra commands"
    },
    "generate-spec": {
      "description": "Generate API spec docs based on cobra commands",
      "flags": {
        "help": {
          "alias": "h",
          "description": "help for generate-spec",
          "default": "false"
        }
      }
    },
    "help": {
      "description": "Help provides help for any command in the application.\nSimply type corectl help [path to command] for full details."
    },
    "keys": {
      "description": "Print a fields list containing key-only fields"
    },
    "measure": {
      "description": "Explore and manage measures",
      "commands": {
        "layout": {
          "description": "Evaluate the layout of an generic measure and prints in JSON format"
        },
        "ls": {
          "description": "Print a list of all generic measures in the current app"
        },
        "properties": {
          "description": "Print the properties of the generic measure"
        },
        "rm": {
          "description": "Remove one or many generic measures in the current app",
          "flags": {
            "no-save": {
              "description": "Do not save the app",
              "default": "false"
            }
          }
        },
        "set": {
          "description": "Set or update the measures in the current app",
          "flags": {
            "no-save": {
              "description": "Do not save the app",
              "default": "false"
            }
          }
        }
      }
    },
    "meta": {
      "description": "Print tables, fields, associations along with metadata like memory consumption, field cardinality etc"
    },
    "object": {
      "description": "Explore and manage generic objects",
      "commands": {
        "data": {
          "description": "Evaluate the hypercube data of a generic object"
        },
        "layout": {
          "description": "Evaluate the hypercube layout of the generic object"
        },
        "ls": {
          "description": "Print a list of all generic objects in the current app"
        },
        "properties": {
          "description": "Print the properties of the generic object in JSON format"
        },
        "rm": {
          "description": "Remove one or many generic objects in the current app",
          "flags": {
            "no-save": {
              "description": "Do not save the app",
              "default": "false"
            }
          }
        },
        "set": {
          "description": "Set or update the objects in the current app.\nThe JSON objects can be in either the GenericObjectProperties format or the GenericObjectEntry format",
          "flags": {
            "no-save": {
              "description": "Do not save the app",
              "default": "false"
            }
          }
        }
      }
    },
    "reload": {
      "description": "Reload and save the app",
      "flags": {
        "no-save": {
          "description": "Do not save the app",
          "default": "false"
        },
        "silent": {
          "description": "Do not log reload output",
          "default": "false"
        }
      }
    },
    "script": {
      "description": "Explore and manage the script",
      "commands": {
        "get": {
          "description": "Print the reload script currently set in the app"
        },
        "set": {
          "description": "Set the script in the current app",
          "flags": {
            "no-save": {
              "description": "Do not save the app",
              "default": "false"
            }
          }
        }
      }
    },
    "status": {
      "description": "Print status info about the connection to the engine and current app, and also the status of the data model"
    },
    "tables": {
      "description": "Print tables for the data model in an app"
    },
    "values": {
      "description": "Print all the values for a specific field in your data model"
    },
    "version": {}
  }
}
