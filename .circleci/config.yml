version: 2
jobs:
  build:
    working_directory: /go/src/github.com/qlik-oss/corectl
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: go get -u golang.org/x/lint/golint
      - restore_cache:
          key: dependency-cache-{{ checksum "Gopkg.lock" }}
      - run:
          name: Install dependencies
          command: dep ensure
      - save_cache:
          key: dependency-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
      - run:
          name: Linting
          command: golint -set_exit_status
      - run:
          name: Build
          command: go build
      - run:
          name: Test
          command: go test -v -race ./...
      - run:
          name: Check if documentation needs to be updated
          command: |
            ./corectl generate-docs
            git diff --exit-code --name-only docs/
      - setup_remote_docker
      - run:
          name: Run Integration Test
          working_directory: /go
          command: |
            # Spin up environment
            ACCEPT_EULA=yes docker-compose -f src/github.com/qlik-oss/corectl/test/docker-compose.yml up -d
            CONTAINER_ID=$(docker ps -aqf "name=engine")
            TEST_HOST=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.Gateway}}{{end}}' "$CONTAINER_ID")
            # Start a container for test execution
            TEST_CONTAINER=$(docker run -e TEST_HOST=$TEST_HOST -d golang:1.9-alpine tail -f /dev/null)
            # Install packages
            docker exec $TEST_CONTAINER sh -c 'apk update && apk add --no-cache bash'
            # Copy code into container
            docker cp . $TEST_CONTAINER:/go
            # Copy apps and data into engine container
            chmod -R 777 src/github.com/qlik-oss/corectl/test/
            docker cp src/github.com/qlik-oss/corectl/test/apps/ $CONTAINER_ID:/
            docker cp src/github.com/qlik-oss/corectl/test/data/ $CONTAINER_ID:/
            # Execute tests
            docker exec $TEST_CONTAINER /bin/bash -c 'go test /go/src/github.com/qlik-oss/corectl/test/corectl_integration_test.go --engineIP $TEST_HOST:9076'

  publish:
    docker:
      - image: circleci/golang:1.9
    steps:
      - checkout
      - run: go get -u github.com/golang/dep/cmd/dep
      - run: curl -sL https://git.io/goreleaser | bash

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /v.*/
